{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","ContactList","this","props","contacts","deleteContact","className","style","list","map","id","name","number","items","button","type","onClick","e","target","Component","ContactForm","state","handleChange","value","setState","handleSubmit","evt","preventDefault","find","contact","alert","addContact","form","onSubmit","input","onChange","placeholder","Filter","onChangeFilter","Phonebook","filter","uuidv4","prevState","changeFilter","getFilteredContacts","toLowerCase","includes","handleDelete","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","section","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea701c19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__2Xl9n\",\"button\":\"ContactForm_button__2Ymcp\",\"form\":\"ContactForm_form__311aL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3pX9K\",\"items\":\"ContactList_items__uwzfs\",\"button\":\"ContactList_button__8HMDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__MxzUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ANyf\",\"App-logo\":\"App_App-logo__3UkUU\",\"App-logo-spin\":\"App_App-logo-spin__1cjIs\",\"App-header\":\"App_App-header__36vQe\",\"App-link\":\"App_App-link__qbUfR\",\"section\":\"App_section__3vIho\"};","import React, { Component } from 'react';\r\nimport style from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactList extends Component {\r\n  render() {\r\n    const { contacts, deleteContact } = this.props;\r\n\r\n    return (\r\n      <ul className={style.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={style.items} key={id}>\r\n            {name} : {number}\r\n            <button\r\n              className={style.button}\r\n              type=\"button\"\r\n              id={id}\r\n              onClick={e => deleteContact(e.target.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport style from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n    const existedContact = contacts.find(contact => contact.name === name);\r\n    if (existedContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.props.addContact(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={style.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name{' '}\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter name\"\r\n          ></input>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number{' '}\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter number\"\r\n          ></input>\r\n        </label>\r\n        <br />\r\n        <button className={style.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  state: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport style from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h4>Find contacts by name </h4>\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '.././ContactForm/ContactForm';\nimport Filter from '.././Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport style from './App.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class Phonebook extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      name: name,\n      number: number,\n      id: uuidv4(),\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n  handleDelete = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className={style.section}>\n        <h1>Phonebook</h1>\n\n        <ContactForm addContact={this.addContact} contacts={filteredContacts} />\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n\n        {filteredContacts.length > 0 && (\n          <ContactList\n            deleteContact={this.handleDelete}\n            contacts={filteredContacts}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nPhonebook.propTypes = {\n  state: PropTypes.shape({\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        number: PropTypes.string,\n      }),\n    ).isRequired,\n    filter: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}